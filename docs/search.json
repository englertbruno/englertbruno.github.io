[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/distribution/explore_latent_space_aee.html",
    "href": "posts/distribution/explore_latent_space_aee.html",
    "title": "englert.ai",
    "section": "",
    "text": "import os\nimport time\nfrom os.path import isfile\nimport copy\nimport GPUtil\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport torch\nfrom torch import nn\nfrom tqdm import tqdm\nimport torchvision.transforms as transforms\nimport numpy as np\nfrom mpl_toolkits import mplot3d\nfrom fastdist import fastdist\n\n#%matplotlib inline\nimport torchvision\nimport umap\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nfrom ipywidgets import interactive\n%matplotlib inline\n\n\nfrom src.models.encoder.resnet18enccifar10 import ResNet18EncCIFAR10\nfrom src.models.decoder.decoder_transpose_only_cifar10 import DecoderTransposeOnlyCIFAR10\n\n\nencoder = ResNet18EncCIFAR10(z_dim=9)\ndecoder = DecoderTransposeOnlyCIFAR10(z_dim=9)\n\n\nencoder.load_state_dict(torch.load(\"output/joker/autoenctraineraee_resnet18enccifar10_decodertransposeonlycifar10_discriminatoraee_tagall_class_zdim9_train_batch_size32_enc.pt\"))\ndecoder.load_state_dict(torch.load(\"output/joker/autoenctraineraee_resnet18enccifar10_decodertransposeonlycifar10_discriminatoraee_tagall_class_zdim9_train_batch_size32_dec.pt\"))\n\n&lt;All keys matched successfully&gt;\n\n\n\n\nclass LazyLoadCifar10WithAugmentationNoNorm:\n    _trainset, _testset, _classes = None, None, None\n\n    @staticmethod\n    def load():\n        transform_train = transforms.Compose([\n            transforms.ToTensor(),\n        ])\n\n        transform_test = transforms.Compose([\n            transforms.ToTensor(),\n        ])\n\n        trainset = torchvision.datasets.CIFAR10(root='./data',\n                                                train=True,\n                                                download=True,\n                                                transform=transform_train)\n\n        testset = torchvision.datasets.CIFAR10(root='./data',\n                                               train=False,\n                                               download=True,\n                                               transform=transform_test)\n\n        classes = ('plane', 'car', 'bird', 'cat', 'deer',\n                   'dog', 'frog', 'horse', 'ship', 'truck')\n\n        LazyLoadCifar10WithAugmentationNoNorm._trainset, LazyLoadCifar10WithAugmentationNoNorm._testset, LazyLoadCifar10WithAugmentationNoNorm._classes = trainset, testset, classes\n\n    @staticmethod\n    def get():\n        if LazyLoadCifar10WithAugmentationNoNorm._trainset is None or LazyLoadCifar10WithAugmentationNoNorm._testset is None or LazyLoadCifar10WithAugmentationNoNorm._classes is None:\n            LazyLoadCifar10WithAugmentationNoNorm.load()\n        return copy.deepcopy(LazyLoadCifar10WithAugmentationNoNorm._trainset), copy.deepcopy(\n            LazyLoadCifar10WithAugmentationNoNorm._testset), copy.deepcopy(LazyLoadCifar10WithAugmentationNoNorm._classes)\n\n\ntrainset, _, _ = LazyLoadCifar10WithAugmentationNoNorm().get()\n\n\ntrainloader = torch.utils.data.DataLoader(trainset,\n                                           batch_size=8,\n                                           shuffle=True,\n                                           num_workers=1)\n\n\nimg, label = next(iter(trainloader))\nimg_np = img.cpu().numpy()[0]\nplt.imshow(np.transpose(img_np, (1, 2, 0)))\nplt.plot()\n\n[]\n\n\n\n\n\n\nencoder(img[0:1,...])\n\ntensor([[-0.2381,  0.2783, -0.0744,  0.6457, -0.7084, -0.5193, -0.2444, -0.3821,\n          0.3524]], grad_fn=&lt;AddmmBackward&gt;)\n\n\n\nwith torch.no_grad():\n    z = torch.from_numpy(np.asarray([-0.2381,  0.2783, -0.0744,  0.6457, -0.7084, -0.5193, -0.2444, -0.3821,  0.3524], dtype=np.float32).reshape(1, 9, 1, 1)) \n    #print(z)\n    out_img = np.transpose(decoder(z).detach().numpy()[0], (1, 2, 0))\nplt.imshow(out_img)\nplt.show\n\n&lt;function matplotlib.pyplot.show(close=None, block=None)&gt;\n\n\n\n\n\n\nimg, label = next(iter(trainloader))\nimg_np = img.cpu().numpy()[0]\nplt.imshow(np.transpose(img_np, (1, 2, 0)))\nplt.show()\n\nwith torch.no_grad():\n    out_img = np.transpose(decoder( encoder(img)).detach().numpy()[0], (1, 2, 0))\nplt.imshow(out_img)\nplt.show()\n\n\n\n\n\n\n\n\n\ndef update(a=(-1.0, 1.0, 0.01),\n           b=(-1.0, 1.0, 0.01),\n           c=(-1.0, 1.0, 0.01),\n           d=(-1.0, 1.0, 0.01),\n           e=(-1.0, 1.0, 0.01),\n           f=(-1.0, 1.0, 0.01),\n           g=(-1.0, 1.0, 0.01),\n           h=(-1.0, 1.0, 0.01),\n           i=(-1.0, 1.0, 0.01)):\n    with torch.no_grad():\n        z = torch.from_numpy(np.asarray([a,b,c,d,e,f,g,h,i], dtype=np.float32).reshape(1, 9, 1, 1)) \n        #print(z)\n        out_img = np.transpose(decoder(z).detach().numpy()[0], (1, 2, 0))\n    plt.imshow(out_img)\n    plt.show()\n\ninteractive_plot = interact(update)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ü§ñ Welcome to my blog!",
    "section": "",
    "text": "2D Physics of The Inverted Pendulum on a Cart\n\n\n\n\n\n\n\n\n\n\n\n\nJul 26, 2023\n\n\nBruno Englert\n\n\n7 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "archive.html",
    "href": "archive.html",
    "title": "Archive",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\n\n\nJul 25, 2023\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nJul 22, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/inverted_pendulum/englert_ai_1_cart_physics.html",
    "href": "posts/inverted_pendulum/englert_ai_1_cart_physics.html",
    "title": "2D Physics of The Inverted Pendulum on a Cart",
    "section": "",
    "text": "The system we are going to describe consists of an inverted pendulum mounted on a motorized cart. This is very similar when you want to try keep the broom upwards on the tip of your finger. But why is it challenging?\nThe problem is inherently unstable. Like our broomstick, once it starts to move away from its equilibrium position (straight up), gravity works to accelerate its fall. The system is also non-linear. The relation between inputs (force we exert on the broomstick) and outputs (the broomstick‚Äôs angle) isn‚Äôt directly proportional. That makes predicting and controlling its behavior a beautiful puzzle. This system is a classic example of a nonlinear and inherently unstable setup, but it‚Äôs also simple enough to understand and simulate.\nTo make our life easier, let‚Äôs consider a simplified two-dimensional case. This system consists of two parts: the cart and the pendulum. The cart can only move horizontally, and the pendulum can freely swing back and forth. We can control the system by applying a horizontal force, \\(F\\), on the cart. We get feedback from the system in the form of three observations: the angle of the pendulum, the angular velocity and its angular acceleration. Using the equations of motions can help us understand how to control and balance such a system.\n\n\n\nForces on the cart. Red denotes forces exerted on the cart, while green forces denote forces exerted on the pendulum. ‚Äòx‚Äô is the position of the cart."
  },
  {
    "objectID": "posts/inverted_pendulum/englert_ai_1_cart_physics.html#carts-motion",
    "href": "posts/inverted_pendulum/englert_ai_1_cart_physics.html#carts-motion",
    "title": "2D Physics of The Inverted Pendulum on a Cart",
    "section": "Cart‚Äôs Motion",
    "text": "Cart‚Äôs Motion\nLet‚Äôs start with the motion of the cart. When we push the cart, it experiences several forces: its own inertia due to its mass ‚ÄúM,‚Äù a damping factor ‚Äúb‚Äù related to friction, and the force ‚ÄúN‚Äù coming from the pendulum.\n\\[\\begin{equation}\n    M\\ddot{x}+b\\dot{x}+N = F\n\\end{equation}\\]\n\n\\(M\\) is the mass of the cart.\n\\(b\\) friction coefficient.\n\\(\\dot{x}\\) is the velocity of the cart.\n\\(\\ddot{x}\\) is the acceleration of the cart.\n\\(N\\) is the reaction force from the pendulum.\n\\(F\\) is the force we apply to the cart.\n\nThe term \\(M\\ddot{x}\\) represents the force due to the cart‚Äôs acceleration. Essentially, Newton‚Äôs second law tells us that the force exerted on an object is directly proportional to its mass and acceleration.\nThe next term, \\(b\\dot{x}\\), accounts for the force opposing the cart‚Äôs movement, primarily due to friction. The friction coefficient, \\(b\\), quantifies the amount of resistive force the cart faces, which increases with the cart‚Äôs velocity \\(\\dot{x}\\). So, the faster the cart is moving, the greater the friction force it encounters.\nLastly, \\(N\\) is the reaction force exerted by the pendulum on the cart. As the pendulum swings, it applies a force on the cart, which the cart must counteract to maintain balance. We don‚Äôt know \\(N\\) yet, that‚Äôs why we just noted it with an arbitrarily chosen letter. In the following section we are determining the value \\(N\\) takes.\nNote that we only summed the forces on the horizontal axis. You can also sum the forces in the vertical direction for the cart, but since the cart is unable to move vertically, this is unnecessary."
  },
  {
    "objectID": "posts/inverted_pendulum/englert_ai_1_cart_physics.html#pendulums-motion",
    "href": "posts/inverted_pendulum/englert_ai_1_cart_physics.html#pendulums-motion",
    "title": "2D Physics of The Inverted Pendulum on a Cart",
    "section": "Pendulum‚Äôs Motion",
    "text": "Pendulum‚Äôs Motion\nWhen discussing the motion of the pendulum, it‚Äôs crucial to consider both the horizontal and vertical forces acting on it. This is because the pendulum, unlike the cart, can move in both directions due to its rotational nature.\n\nHorizontal\nThe horizontal forces acting on the pendulum are captured by the equation:\n\\[\\begin{equation}\nN = m\\ddot{x}+ml\\ddot{\\theta}\\cos\\theta-ml\\dot{\\theta}^2\\sin\\theta\n\\end{equation}\\]\n\n\\(m\\) is the mass of the pendulum.\n\\(l\\) is the length of the pendulum.\n\\(\\theta\\) is the angle of the pendulum.\n\\(\\dot{\\theta}\\) is the angular velocity\n\\(\\ddot{\\theta}\\) is the angular acceleration.\n\\(N\\) is the pendulum‚Äôs reaction force.\n\nThis equation essentially describes how the pendulum‚Äôs motion is influenced by the cart‚Äôs movement and its own inertia. The term $ m$ is the force exerted on the pendulum due to the acceleration of the cart. The term \\(ml\\ddot{\\theta}\\cos\\theta\\) describes the force on the pendulum due to its own angular acceleration, while ‚àí\\(ml\\dot{\\theta}^2\\sin\\theta\\) accounts for the centrifugal force acting on the pendulum as it swings.\nNow, we can substitute this back in to the cart‚Äôs equation, which gives us: \\[\\begin{equation}\n    (M+m)\\ddot{x}+b\\dot{x}+ml\\ddot{\\theta}\\cos\\theta-ml\\dot{\\theta}^2\\sin\\theta=F\n\\label{eq:horizontal}  \\tag{1}\n\\end{equation}\\]\n\n\nVertical\nSo far we only dealt with the horizontal forces. To get the vertical forces for this system, we sum the forces perpendicular to the pendulum:\n\\[\\begin{equation}\nP\\sin\\theta+N\\cos\\theta-mg\\sin\\theta=ml\\ddot{\\theta}+m\\ddot{x}\\cos\\theta\n\\end{equation}\\]\n\n\\(P\\) is the vertical component the cart is pushing back on the pendulum.\n\\(g\\) is the acceleration due to gravity.\n\nIn this equation, \\(P\\) is the vertical component of the reaction force with which the cart pushes back on the pendulum. The gravitational force acting on the pendulum is represented by \\(mg\\sin\\theta\\), which tries to pull the pendulum downward. The right side of the equation relates to the forces due to the pendulum‚Äôs angular acceleration and the cart‚Äôs linear acceleration.\nWe need to get rid of \\(P\\) and \\(N\\). To do that we sum the moments about the centroid of the pendulum to get the following equation: \\[\\begin{equation}\n-Pl\\sin\\theta-Nl\\cos\\theta=I\\ddot{\\theta}\n\\end{equation}\\]\n\n\\(I\\) is the mass moment of inertia of the pendulum.\n\nCombining these last two expressions, we get the vertical forces of the system: \\[\\begin{equation}\n(I+ml^2)\\ddot{\\theta}+mgl\\sin\\theta=-ml\\ddot{x}\\cos\\theta\n\\label{eq:vertical}  \\tag{2}\n\\end{equation}\\]\nIn our case \\(I=m(\\frac{l}{2})^2\\), (you can look up the moment of inertia for different shaped objects)."
  }
]