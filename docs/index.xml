<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>englert.ai</title>
<link>https://www.englert.ai/index.html</link>
<atom:link href="https://www.englert.ai/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Tue, 25 Jul 2023 22:00:00 GMT</lastBuildDate>
<item>
  <title>2D Physics of The Inverted Pendulum on a Cart</title>
  <dc:creator>Bruno Englert</dc:creator>
  <link>https://www.englert.ai/posts/inverted_pendulum/englert_ai_1_cart_physics.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>The system we are going to describe consists of an inverted pendulum mounted on a motorized cart. This is very similar when you want to try keep the broom upwards on the tip of your finger. But why is it challenging?</p>
<p>The problem is inherently unstable. Like our broomstick, once it starts to move away from its equilibrium position (straight up), gravity works to accelerate its fall. The system is also non-linear. The relation between inputs (force we exert on the broomstick) and outputs (the broomstick’s angle) isn’t directly proportional. That makes predicting and controlling its behavior a beautiful puzzle. This system is a classic example of a nonlinear and inherently unstable setup, but it’s also simple enough to understand and simulate.</p>
<p>To make our life easier, let’s consider a simplified two-dimensional case. This system consists of two parts: the cart and the pendulum. The cart can only move horizontally, and the pendulum can freely swing back and forth. We can control the system by applying a horizontal force, <img src="https://latex.codecogs.com/png.latex?F">, on the cart. We get feedback from the system in the form of three observations: the angle of the pendulum, the angular velocity and its angular acceleration. Using the equations of motions can help us understand how to control and balance such a system.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.englert.ai/posts/inverted_pendulum/cart.svg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Forces on the cart. Red denotes forces exerted on the cart, while green forces denote forces exerted on the pendulum. ‘x’ is the position of the cart.</figcaption>
</figure>
</div>
</section>
<section id="equations-of-motion" class="level1">
<h1>Equations of motion</h1>
<section id="carts-motion" class="level2">
<h2 class="anchored" data-anchor-id="carts-motion">Cart’s Motion</h2>
<p>Let’s start with the motion of the cart. When we push the cart, it experiences several forces: its own inertia due to its mass “M,” a damping factor “b” related to friction, and the force “N” coming from the pendulum.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bequation%7D%0A%20%20%20%20M%5Cddot%7Bx%7D+b%5Cdot%7Bx%7D+N%20=%20F%0A%5Cend%7Bequation%7D"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?M"> is the mass of the cart.</li>
<li><img src="https://latex.codecogs.com/png.latex?b"> friction coefficient.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cdot%7Bx%7D"> is the velocity of the cart.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cddot%7Bx%7D"> is the acceleration of the cart.</li>
<li><img src="https://latex.codecogs.com/png.latex?N"> is the reaction force from the pendulum.</li>
<li><img src="https://latex.codecogs.com/png.latex?F"> is the force we apply to the cart.</li>
</ul>
<p>The term <img src="https://latex.codecogs.com/png.latex?M%5Cddot%7Bx%7D"> represents the force due to the cart’s acceleration. Essentially, Newton’s second law tells us that the force exerted on an object is directly proportional to its mass and acceleration.</p>
<p>The next term, <img src="https://latex.codecogs.com/png.latex?b%5Cdot%7Bx%7D">, accounts for the force opposing the cart’s movement, primarily due to friction. The friction coefficient, <img src="https://latex.codecogs.com/png.latex?b">, quantifies the amount of resistive force the cart faces, which increases with the cart’s velocity <img src="https://latex.codecogs.com/png.latex?%5Cdot%7Bx%7D">. So, the faster the cart is moving, the greater the friction force it encounters.</p>
<p>Lastly, <img src="https://latex.codecogs.com/png.latex?N"> is the reaction force exerted by the pendulum on the cart. As the pendulum swings, it applies a force on the cart, which the cart must counteract to maintain balance. We don’t know <img src="https://latex.codecogs.com/png.latex?N"> yet, that’s why we just noted it with an arbitrarily chosen letter. In the following section we are determining the value <img src="https://latex.codecogs.com/png.latex?N"> takes.</p>
<p>Note that we only summed the forces on the horizontal axis. You can also sum the forces in the vertical direction for the cart, but since the cart is unable to move vertically, this is unnecessary.</p>
</section>
<section id="pendulums-motion" class="level2">
<h2 class="anchored" data-anchor-id="pendulums-motion">Pendulum’s Motion</h2>
<p>When discussing the motion of the pendulum, it’s crucial to consider both the horizontal and vertical forces acting on it. This is because the pendulum, unlike the cart, can move in both directions due to its rotational nature.</p>
<section id="horizontal" class="level3">
<h3 class="anchored" data-anchor-id="horizontal">Horizontal</h3>
<p>The horizontal forces acting on the pendulum are captured by the equation:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bequation%7D%0AN%20=%20m%5Cddot%7Bx%7D+ml%5Cddot%7B%5Ctheta%7D%5Ccos%5Ctheta-ml%5Cdot%7B%5Ctheta%7D%5E2%5Csin%5Ctheta%0A%5Cend%7Bequation%7D"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?m"> is the mass of the pendulum.</li>
<li><img src="https://latex.codecogs.com/png.latex?l"> is the length of the pendulum.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Ctheta"> is the angle of the pendulum.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cdot%7B%5Ctheta%7D"> is the angular velocity</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cddot%7B%5Ctheta%7D"> is the angular acceleration.</li>
<li><img src="https://latex.codecogs.com/png.latex?N"> is the pendulum’s reaction force.</li>
</ul>
<p>This equation essentially describes how the pendulum’s motion is influenced by the cart’s movement and its own inertia. The term <img src="https://latex.codecogs.com/png.latex?m%5Cddot%7Bx%7D"> is the force exerted on the pendulum due to the acceleration of the cart. The term <img src="https://latex.codecogs.com/png.latex?ml%5Cddot%7B%5Ctheta%7D%5Ccos%5Ctheta"> describes the force on the pendulum due to its own angular acceleration, while −<img src="https://latex.codecogs.com/png.latex?ml%5Cdot%7B%5Ctheta%7D%5E2%5Csin%5Ctheta"> accounts for the centrifugal force acting on the pendulum as it swings.</p>
<p>Now, we can substitute this back in to the cart’s equation, which gives us: <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bequation%7D%0A%20%20%20%20(M+m)%5Cddot%7Bx%7D+b%5Cdot%7Bx%7D+ml%5Cddot%7B%5Ctheta%7D%5Ccos%5Ctheta-ml%5Cdot%7B%5Ctheta%7D%5E2%5Csin%5Ctheta=F%0A%5Clabel%7Beq:horizontal%7D%20%20%5Ctag%7B1%7D%0A%5Cend%7Bequation%7D"></p>
</section>
<section id="vertical" class="level3">
<h3 class="anchored" data-anchor-id="vertical">Vertical</h3>
<p>So far we only dealt with the horizontal forces. To get the vertical forces for this system, we sum the forces perpendicular to the pendulum:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bequation%7D%0AP%5Csin%5Ctheta+N%5Ccos%5Ctheta-mg%5Csin%5Ctheta=ml%5Cddot%7B%5Ctheta%7D+m%5Cddot%7Bx%7D%5Ccos%5Ctheta%0A%5Cend%7Bequation%7D"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P"> is the vertical component the cart is pushing back on the pendulum.</li>
<li><img src="https://latex.codecogs.com/png.latex?g"> is the acceleration due to gravity.</li>
</ul>
<p>In this equation, <img src="https://latex.codecogs.com/png.latex?P"> is the vertical component of the reaction force with which the cart pushes back on the pendulum. The gravitational force acting on the pendulum is represented by <img src="https://latex.codecogs.com/png.latex?mg%5Csin%5Ctheta">, which tries to pull the pendulum downward. The right side of the equation relates to the forces due to the pendulum’s angular acceleration and the cart’s linear acceleration.</p>
<p>We need to get rid of <img src="https://latex.codecogs.com/png.latex?P"> and <img src="https://latex.codecogs.com/png.latex?N">. To do that we sum the moments about the centroid of the pendulum to get the following equation: <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bequation%7D%0A-Pl%5Csin%5Ctheta-Nl%5Ccos%5Ctheta=I%5Cddot%7B%5Ctheta%7D%0A%5Cend%7Bequation%7D"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?I"> is the mass moment of inertia of the pendulum.</li>
</ul>
<p>Combining these last two expressions, we get the vertical forces of the system: <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bequation%7D%0A(I+ml%5E2)%5Cddot%7B%5Ctheta%7D+mgl%5Csin%5Ctheta=-ml%5Cddot%7Bx%7D%5Ccos%5Ctheta%0A%5Clabel%7Beq:vertical%7D%20%20%5Ctag%7B2%7D%0A%5Cend%7Bequation%7D"></p>
<p>In our case <img src="https://latex.codecogs.com/png.latex?I=m(%5Cfrac%7Bl%7D%7B2%7D)%5E2">, (you can look up the moment of inertia for different shaped objects).</p>
</section>
</section>
</section>
<section id="matrix-form-of-the-system" class="level1">
<h1>Matrix Form of the System</h1>
<p>From Equation <img src="https://latex.codecogs.com/png.latex?%5Ceqref%7Beq:horizontal%7D"> and Equation <img src="https://latex.codecogs.com/png.latex?%5Ceqref%7Beq:vertical%7D"> we can write the final equations of motion:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign*%7D%0A%5Cbegin%7Bbmatrix%7D%0A%20%20M+m%20&amp;%20mlcos(%5Ctheta)%20%5C%5C%0A%20%20cos(%5Ctheta)ml%20&amp;%20m(%5Cfrac%7Bl%7D%7B2%7D)%5E2%20+%20m%7Bl%7D%5E2%0A%5Cend%7Bbmatrix%7D%20%20%0A%5Cbegin%7Bbmatrix%7D%0A%20%20%5Cddot%7Bx%7D%20%5C%5C%0A%20%20%5Cddot%7B%5Ctheta%7D%0A%5Cend%7Bbmatrix%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A%20%20F+ml%7B%5Cdot%7B%5Ctheta%7D%7D%5E2%5Csin(%5Ctheta)-b%5Cdot%7Bx%7D%20%5C%5C%0A%20%20-mgl%20sin(%5Ctheta)%0A%5Cend%7Bbmatrix%7D%0A%5Cend%7Balign*%7D"></p>
<p>This is in the form <img src="https://latex.codecogs.com/png.latex?As=b">, where we are looking for <img src="https://latex.codecogs.com/png.latex?s">, which describes the current state of the system, such as the cart’s acceleration and pendulum’s angular acceleration. If we can solve the equation for <img src="https://latex.codecogs.com/png.latex?s">, we can get the accelerations and run a simulation. This can be done, by getting the inverse of <img src="https://latex.codecogs.com/png.latex?A">, such as: <img src="https://latex.codecogs.com/png.latex?s=b%5ET*%7B(A%5ET)%7D%5E%7B-1%7D">. After we get <img src="https://latex.codecogs.com/png.latex?s">, we can use Euler’s method to calculate the position of the cart and the pendulum.</p>
</section>
<section id="running-a-simulation-using-eulers-method" class="level1">
<h1>Running a Simulation Using Euler’s Method:</h1>
<p>The beauty of Euler’s method is its simplicity. We’re essentially predicting the future (next state of the system) based on the present (current state) and a tiny step forward in time. It is a numerical technique to approximate a solution, where the exact solution can’t be calculated or just too hard to calculate. Formally, given an initial state, the method estimates the next state by taking a small step based on the rate of change.</p>
<p>However, a word of caution: Euler’s method isn’t perfect. The smaller the step, the more accurate our predictions, but it also means more computational work. We can spead up the simulation by taking larger steps, but in turn this leads to inaccuracies.</p>
<p>In our pendulum+cart case, we actually never determined the exact position of the cart for a given time <img src="https://latex.codecogs.com/png.latex?t">. We have no clue where is the pendulum e.g.&nbsp;after 12 seconds, by substituting the values back into the equation we derived above. We only described how the system changes from one moment to another. However, if we know how the system changes, we can still calculate how it will move around as time passes. If we have an initial state and by only doing very small steps (we can do this since we know how the system changes), we can approximate where the cart and pendulum will be as time passes.</p>
<p>So in a more formal way:</p>
<ol type="1">
<li>Start with initial conditions for <img src="https://latex.codecogs.com/png.latex?x">, <img src="https://latex.codecogs.com/png.latex?%5Cdot%7Bx%7D">, <img src="https://latex.codecogs.com/png.latex?%5Ctheta">, and <img src="https://latex.codecogs.com/png.latex?%5Cdot%7B%5Ctheta%7D">.</li>
<li>Calculate accelerations <img src="https://latex.codecogs.com/png.latex?%5Cddot%7Bx%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cddot%7B%5Ctheta%7D"> using the matrix equations.</li>
<li>Update the velocities and positions:
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cdot%7Bx%7D_%7Bnew%7D=%5Cdot%7Bx%7D_%7Bold%7D+%5Cddot%7Bx%7D%5Ctimes"> <img src="https://latex.codecogs.com/png.latex?dt"></li>
<li><img src="https://latex.codecogs.com/png.latex?x_%7Bnew%7D=x_%7Bold%7D+%5Cdot%7Bx%7D_%7Bnew%7D%5Ctimes"> <img src="https://latex.codecogs.com/png.latex?dt"></li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cdot%7B%5Ctheta%7D_%7Bnew%7D=%5Cdot%7B%5Ctheta%7D_%7Bold%7D+%5Cddot%7B%5Ctheta%7D%5Ctimes"> <img src="https://latex.codecogs.com/png.latex?dt"></li>
<li><img src="https://latex.codecogs.com/png.latex?%5Ctheta_%7Bnew%7D=%5Ctheta_%7Bold%7D+%5Cdot%7B%5Ctheta%7D_%7Bnew%7D%5Ctimes"> <img src="https://latex.codecogs.com/png.latex?dt"></li>
</ul></li>
<li>Repeat for the desired number of steps or until we reach the end of simulation (e.g.&nbsp;12 seconds).</li>
</ol>
</section>
<section id="putting-it-all-together" class="level1">
<h1>Putting it all together</h1>
<p>Now that we defined the system, we can write our lil simulation of the inverted pendulum on a cart:</p>
<div class="cell" data-executetime="{&quot;end_time&quot;:&quot;2023-10-24T15:29:38.970201049Z&quot;,&quot;start_time&quot;:&quot;2023-10-24T15:29:38.955384542Z&quot;}" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3">G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.81</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> CartPendulum:</span>
<span id="cb1-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, dt, length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">200.</span>, pendulum_mass<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, cart_mass<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, friction_coefficient<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0008</span>):</span>
<span id="cb1-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dt</span>
<span id="cb1-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> length</span>
<span id="cb1-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pendulum_mass</span>
<span id="cb1-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cart_mass</span>
<span id="cb1-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.friction_coefficient <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> friction_coefficient</span>
<span id="cb1-13"></span>
<span id="cb1-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span></span>
<span id="cb1-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span></span>
<span id="cb1-16">        </span>
<span id="cb1-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.pi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># angle</span></span>
<span id="cb1-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># angular speed</span></span>
<span id="cb1-19">        </span>
<span id="cb1-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.friction_force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span></span>
<span id="cb1-21"></span>
<span id="cb1-22"></span>
<span id="cb1-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> step(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, force_on_cart):</span>
<span id="cb1-24">        pendulum_mass_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.length</span>
<span id="cb1-25">        total_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_mass</span>
<span id="cb1-26">        pendulum_inertia <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-27">        </span>
<span id="cb1-28">        cosphi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.cos(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_angle)</span>
<span id="cb1-29">        sinphi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.sin(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_angle)</span>
<span id="cb1-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.friction_force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.friction_coefficient <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.sign(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_speed)</span>
<span id="cb1-31"></span>
<span id="cb1-32">        cart_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((cosphi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pendulum_mass_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> force_on_cart <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.friction_force) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pendulum_inertia <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb1-33">                    (pendulum_mass_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> cosphi) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (pendulum_mass_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sinphi)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-34">                   (total_mass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pendulum_inertia <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pendulum_mass_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sinphi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>pendulum_mass_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sinphi)</span>
<span id="cb1-35"></span>
<span id="cb1-36">        angular_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>cart_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pendulum_mass_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sinphi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (pendulum_mass_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> cosphi)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pendulum_inertia</span>
<span id="cb1-37"></span>
<span id="cb1-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dt</span>
<span id="cb1-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> cart_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dt</span>
<span id="cb1-40">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dt</span>
<span id="cb1-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pendulum_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> angular_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dt</span></code></pre></div>
</div>
</section>
<section id="fin" class="level1">
<h1>Fin</h1>
<video width="100%" src="pendulum_on_cart.mp4" controls="">
</video>
<p>The code to reproduce the visualization:</p>
<div class="cell" data-executetime="{&quot;end_time&quot;:&quot;2023-10-24T15:29:40.213372016Z&quot;,&quot;start_time&quot;:&quot;2023-10-24T15:29:40.016574369Z&quot;}" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-5"></span>
<span id="cb2-6"></span>
<span id="cb2-7">SCREEN_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span></span>
<span id="cb2-8">SCREEN_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span></span>
<span id="cb2-9"></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Simulation:</span>
<span id="cb2-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CartPendulum(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)</span>
<span id="cb2-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.shift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span></span>
<span id="cb2-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.cart_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.shift</span>
<span id="cb2-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.shift</span>
<span id="cb2-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.shift</span>
<span id="cb2-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.shift</span>
<span id="cb2-19"></span>
<span id="cb2-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_applied_force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-21"></span>
<span id="cb2-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> step(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.step(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_applied_force)</span>
<span id="cb2-24"></span>
<span id="cb2-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Draw our rectangle """</span></span>
<span id="cb2-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.cart_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.shift</span>
<span id="cb2-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.shift</span>
<span id="cb2-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.cart_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> math.cos(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.pendulum_angle) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.shift</span>
<span id="cb2-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> math.sin(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.pendulum_angle) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.shift</span>
<span id="cb2-31"></span>
<span id="cb2-32">        overflow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> SCREEN_WIDTH) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> SCREEN_WIDTH</span>
<span id="cb2-33">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> overflow</span>
<span id="cb2-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> overflow</span>
<span id="cb2-35"></span>
<span id="cb2-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw cart</span></span>
<span id="cb2-37">        arcade.draw_rectangle_outline(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, arcade.color.BLACK)</span>
<span id="cb2-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw pendulum</span></span>
<span id="cb2-39">        arcade.draw_line(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x1, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y1, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>arcade.color.RED, line_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb2-40">        arcade.draw_circle_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, arcade.color.BLACK)</span>
<span id="cb2-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw wheels</span></span>
<span id="cb2-42">        wheel_distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb2-43">        arcade.draw_circle_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> wheel_distance, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, arcade.color.BLACK)</span>
<span id="cb2-44">        arcade.draw_circle_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> wheel_distance, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, arcade.color.BLACK)</span>
<span id="cb2-45">        arcade.draw_commands.draw_arc_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> wheel_distance, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>],</span>
<span id="cb2-46">                                             start_angle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb2-47">                                             end_angle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, tilt_angle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb2-48">        arcade.draw_commands.draw_arc_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> wheel_distance, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>],</span>
<span id="cb2-49">                                             start_angle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb2-50">                                             end_angle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, tilt_angle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb2-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Terrain</span></span>
<span id="cb2-52">        arcade.draw_line(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, SCREEN_WIDTH, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, arcade.color.BLACK, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-53"></span>
<span id="cb2-54"></span>
<span id="cb2-55">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_force(center, force, y, color, thickness<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, multiplier<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb2-56">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb2-57">                left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center</span>
<span id="cb2-58">                right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.fmin(center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> multiplier, SCREEN_WIDTH)</span>
<span id="cb2-59">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb2-60">                left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.fmax(center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> multiplier, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-61">                right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> center</span>
<span id="cb2-62"></span>
<span id="cb2-63">            arcade.draw_lrtb_rectangle_filled(left, right, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> thickness, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> thickness, color)</span>
<span id="cb2-64"></span>
<span id="cb2-65">        draw_force(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.friction_force, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>arcade.color.BLUE_GREEN)</span>
<span id="cb2-66">        draw_force(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x0, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_applied_force, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>arcade.color.YELLOW_ORANGE)</span>
<span id="cb2-67"></span>
<span id="cb2-68">        text_y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-69">        text_y_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span>
<span id="cb2-70">        width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span></span>
<span id="cb2-71"></span>
<span id="cb2-72">        arcade.draw_text(</span>
<span id="cb2-73">            text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{:0.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">N Friction force"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.friction_force),</span>
<span id="cb2-74">            start_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SCREEN_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb2-75">            start_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>text_y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> text_y_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-76">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>arcade.color.BLUE_GREEN,</span>
<span id="cb2-77">            font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,</span>
<span id="cb2-78">            align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>,</span>
<span id="cb2-79">            anchor_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>,</span>
<span id="cb2-80">            width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb2-81">        arcade.draw_text(</span>
<span id="cb2-82">            text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{:0.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">N User applied force"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_applied_force),</span>
<span id="cb2-83">            start_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SCREEN_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb2-84">            start_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>text_y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> text_y_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb2-85">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>arcade.color.YELLOW_ORANGE,</span>
<span id="cb2-86">            font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,</span>
<span id="cb2-87">            align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>,</span>
<span id="cb2-88">            anchor_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>,</span>
<span id="cb2-89">            width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb2-90">        arcade.draw_text(</span>
<span id="cb2-91">            text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{:0.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">° Angle"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(((<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.pendulum_angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>),</span>
<span id="cb2-92">            start_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SCREEN_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb2-93">            start_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>text_y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> text_y_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb2-94">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>arcade.color.BLACK,</span>
<span id="cb2-95">            font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,</span>
<span id="cb2-96">            align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>,</span>
<span id="cb2-97">            anchor_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>,</span>
<span id="cb2-98">            width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb2-99">        arcade.draw_text(</span>
<span id="cb2-100">            text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{:0.2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">°/s Angular speed"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.cart_pendulum.pendulum_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span>),</span>
<span id="cb2-101">            start_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SCREEN_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb2-102">            start_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>text_y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> text_y_diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb2-103">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>arcade.color.BLACK,</span>
<span id="cb2-104">            font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,</span>
<span id="cb2-105">            align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>,</span>
<span id="cb2-106">            anchor_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>,</span>
<span id="cb2-107">            width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb3-2"></span>
<span id="cb3-3"></span>
<span id="cb3-4">SCREEN_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span></span>
<span id="cb3-5">SCREEN_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Application(arcade.Window):</span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Main application class. """</span></span>
<span id="cb3-10"></span>
<span id="cb3-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, width, height):</span>
<span id="cb3-12">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(width, height, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pendulum On Cart"</span>)</span>
<span id="cb3-13">        arcade.set_background_color(arcade.color.WHITE)</span>
<span id="cb3-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.simulation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb3-15"></span>
<span id="cb3-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Set up the game and initialize the variables. """</span></span>
<span id="cb3-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.set_update_rate(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set fps</span></span>
<span id="cb3-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.simulation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Simulation()</span>
<span id="cb3-20"></span>
<span id="cb3-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, dt):</span>
<span id="cb3-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Move everything """</span></span>
<span id="cb3-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(1/dt)</span></span>
<span id="cb3-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.simulation.step()</span>
<span id="cb3-25"></span>
<span id="cb3-26"></span>
<span id="cb3-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb3-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Render the screen.</span></span>
<span id="cb3-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb3-31">        arcade.start_render()</span>
<span id="cb3-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.simulation.draw()</span>
<span id="cb3-33"></span>
<span id="cb3-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> on_key_press(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, key, modifiers):</span>
<span id="cb3-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Called whenever a key is pressed. """</span></span>
<span id="cb3-36">        force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.</span></span>
<span id="cb3-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.LEFT:</span>
<span id="cb3-38">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.simulation.user_applied_force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>force</span>
<span id="cb3-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.RIGHT:</span>
<span id="cb3-40">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.simulation.user_applied_force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> force</span>
<span id="cb3-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.SPACE:</span>
<span id="cb3-42">            arcade.window_commands.pause(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb3-43">            image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.draw_commands.get_image()</span>
<span id="cb3-44">            image.save(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'screenshot.png'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PNG'</span>)</span>
<span id="cb3-45"></span>
<span id="cb3-46">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> on_key_release(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, key, modifiers):</span>
<span id="cb3-47">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Called whenever a key is pressed. """</span></span>
<span id="cb3-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.LEFT:</span>
<span id="cb3-49">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.simulation.user_applied_force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-50"></span>
<span id="cb3-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.RIGHT:</span>
<span id="cb3-52">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.simulation.user_applied_force <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-53"></span>
<span id="cb3-54"></span>
<span id="cb3-55">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> on_close(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-56">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().on_close()</span>
<span id="cb3-57"></span>
<span id="cb3-58"></span>
<span id="cb3-59"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__main__"</span>:</span>
<span id="cb3-60">    window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Application(SCREEN_WIDTH, SCREEN_HEIGHT)</span>
<span id="cb3-61">    window.setup()</span>
<span id="cb3-62">    arcade.run()</span></code></pre></div>
</div>


</section>

 ]]></description>
  <guid>https://www.englert.ai/posts/inverted_pendulum/englert_ai_1_cart_physics.html</guid>
  <pubDate>Tue, 25 Jul 2023 22:00:00 GMT</pubDate>
</item>
</channel>
</rss>
